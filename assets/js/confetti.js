/**
 * 由 jsDelivr 使用 Terser v5.19.2 缩小。
 * 原始文件：/npm/canvas-confetti@1.9.0/dist/confetti.browser.js
 *
 * 不要将 SRI 与动态生成的文件一起使用！更多信息：https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function (t, e) { !function t(e, a, n, o) { var r = !!(e.Worker && e.Blob && e.Promise && e.OffscreenCanvas && e.OffscreenCanvasRenderingContext2D && e.HTMLCanvasElement && e.HTMLCanvasElement.prototype.transferControlToOffscreen && e.URL && e.URL.createObjectURL), i = "function" == Typeof Path2D&& "function" == typeof DOMMatrix; function l() { } function s(t) { var n = a.exports.Promise, o = void 0 !== n ? n : e.Promise; return "function" == typeof o ? new o(t) : (t(l, l), null) } var c, h, f, u, d, m, p, g, b, M = (f = Math.floor(1e3 / 60), u = {}, d = 0, "function" == typeof requestAnimationFrame && "function" == typeof cancelAnimationFrame ? (c = function (t) { var e = Math.random(); return u[e] = requestAnimationFrame((function a(n) { d === n || d + f - 1 < n ? (d = n, 删除u[e], t()) : u[e] = requestAnimationFrame(a) })), e }, h = function (t) { u[t] && cancelAnimationFrame(u[t]) }) : (c = function (t) { 返回setTimeout(t, f) }, h = function (t) { 返回clearTimeout(t) }), { frame: c, 取消: h }), v = (g = {}, function () { if (m) 返回m; if (!n && r) { var e = ["var CONFETTI, SIZE = {}, module = {};", "(" + t.toString() + ")(this, module, true, SIZE); ", "onmessage = function(msg) {", " if (msg.data.options) {", " CONFETTI(msg.data.options).then(function () {", " if (msg.data.callback ) {", " postMessage({ 回调: msg.data.callback });", " }", " });", " } else if (msg.data.reset) {", " CONFETTI && CONFETTI.reset ();", " } else if (msg.data.resize) {", " SIZE.width = msg.data.resize.width;", " SIZE.height = msg.data.resize.height;", " } else if (msg.data.canvas) {", " SIZE.width = msg.data.canvas.width;", " SIZE.height = msg.data.canvas.height;", " CONFETTI = module.exports. create(msg.data.canvas);", " }", "}"].join("\n"); try { m = new Worker(URL.createObjectURL(new Blob([e]))) } catch (t) { return void 0 !== typeof console && "function" == typeof console.warn && console.warn("🎊 无法加载worker", t), null } !function (t) { function e(e, a) { t.postMessage({ options: e || {}, callback: a }) } t.init = function (e) { var a = e.transferControlToOffscreen(); t.postMessage({ canvas: a }, [a]) }, t.fire = 函数(a, n, o){ if (p) return e(a, null), p; var r = Math.random().toString(36).slice(2); return p = s((function (n) { function i(e) { e.data.callback === r && (删除g[r], t.removeEventListener("message", i), p = null, o(), n()) } t.addEventListener("消息", i), e(a, r), g[r] = i.bind(null, { data: { callback: r } }) })) } , t.reset = function () { for (var e in t.postMessage({ reset: !0 }), g) g[e](), 删除g[e] } }(m) } 返回m }), y = { 粒子计数: 50, 角度: 90, 传播: 45, 开始速度: 45, 衰变: .9, 重力: 1, 漂移: 0, 刻度: 200, x: .5, y: .5, 形状: ["正方形", "圆形"], zIndex: 100, 颜色: ["#26ccff", "#a25afd", "#ff5e7e", "#88ff5a", "#fcff42", "#ffa62d", "#ff36ff"], disableForReducedMotion: !1, 标量: 1 };函数 w(t, e, a){ 返回函数(t, e){返回 e ? e(t) : t } (t && null != t[e] ? t[e] : y[e], a) }函数 x(t){返回 t < 0 ? 0 : 数学.floor(t) } 函数C(t){ 返回parseInt(t, 16) } 函数T(t){ 返回t.map(I) } 函数I(t){ var e = String(t).replace(/[^0-9a-f]/gi, ""); 返回e.length < 6 && (e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]), { r: C(e.substring(0, 2)), g: C(e.substring(2, 4)), b: C(e.substring(4, 6)) } }函数 E(t){ t.width = document.documentElement.clientWidth, t.height = document.documentElement.clientHeight }函数 S(t){ var e = t.getBoundingClientRect(); t.width = e.width, t.height = e.height } 函数P(t, e){ e.x += Math.cos(e.angle2D) * e.velocity + e.drift, e.y += Math.sin(e.angle2D) * e.velocity + e.gravity, e.velocity *= e.decay, e.flat ? (e.wobble = 0, e.wobbleX = e.x + 10 * e.scalar, e.wobbleY = e.y + 10 * e.scalar, e.tiltSin = 0, e.tiltCos = 0, e.random = 1) : (e.wobble += e.wobbleSpeed, e.wobbleX = e.x + 10 * e.scalar * Math.cos(e.wobble), e.wobbleY = e.y + 10 * e.scalar * Math.sin(e.wobble), e.tiltAngle += .1, e.tiltSin = Math.sin(e.tiltAngle), e.tiltCos = Math.cos(e.tiltAngle), e.random = Math.random() + 2); var a = e.tick++ / e.totalTicks, n = e.x + e.random * e.tiltCos, o = e.y + e.random * e.tiltSin, r = e.wobbleX + e.random * e.tiltCos, l = e.wobbleY + e.random * e.tiltSin; if (t.fillStyle = "rgba (" + e.color.r + ", " + e.color.g + ", " + e.color.b + ", " + (1 - a) + ")", t.beginPath(), i && "路径" === e.shape.type && "string" == typeof e.shape.path && Array.isArray(e.shape.matrix)) t.fill(function (t, e, a, n, o, r, i) { var l = new Path2D(t), s = new Path2D; s.addPath(l, new DOMMatrix(e)); var c = new Path2D; return c.addPath(s, new DOMMatrix([Math.cos(i)) * o, Math.sin(i) * o, -Math.sin(i) * r, Math.cos(i) * r, a, n])), c } (e.shape.path, e.shape.matrix, ex, ey, .1 * Math.abs(rn), .1 * Math.abs(lo), Math.PI / 10 * e.wobble));else if ("位图" === e.shape.type) { var s = Math.PI / 10 * e.wobble, c = .1 * Math.abs(rn), h = .1 * Math.abs(lo), f = e.shape.bitmap.宽度 * e.标量, u = e.shape.bitmap.高度 * e.标量, d = new DOMMatrix([Math.cos(s) * c, Math.sin(s) * c, -Math.sin(s) ) * h, Math.cos(s) * h, ex, ey]); d.multiplySelf(new DOMMatrix(e.shape.matrix)); var m = t.createPattern(e.shape.bitmap, "no-重复"); m.setTransform(d), t.globalAlpha = 1 - a, t.fillStyle = m, t.fillRect(ex - f / 2, ey - u / 2, f, u), t.globalAlpha = 1 } else if ("circle" === e.shape) t.ellipse ? t.ellipse(ex, ey, Math.abs(rn) * e.ovalScalar, Math.abs(lo) * e.ovalScalar, Math.PI / 10 * e.wobble, 0, 2 * Math.PI) : 函数(t, e, a, n, o, r, i, l, s){ t.save(), t.translate(e, a), t.旋转(r), t.缩放(n, o), t.arc(0, 0, 1, i, l, s), t.恢复() } (t, ex, ey, Math.abs(rn) * e.ovalScalar, Math.abs(lo) * e.ovalScalar, Math.PI / 10 * e.wobble, 0, 2 * Math.PI);else if ("star" === e.shape) for (var p = Math.PI / 2 * 3, g = 4 * e.标量, b = 8 * e.标量, M = ex, v = ey, y = 5, w = Math.PI / y; y--;)M = e.x + Math.cos(p) * b, v = e.y + Math.sin(p) * b, t.lineTo(M, v), p += w, M = e.x + Math.cos(p) * g, v = e.y + Math.sin(p) * g, t.lineTo(M, v), p += w; else t.moveTo(Math.floor(ex), Math.floor(ey)), t.lineTo(Math.floor(e.wobbleX), Math.floor(o)), t.lineTo(Math.floor(r), Math.floor(l)), t.lineTo(Math.floor(n), Math.floor(e.wobbleY));返回 t.closePath(), t.fill(), e.tick < e.totalTicks }函数 k(t, a){ var i, l = !t, c = !!w(a || {}, "调整大小"), h = !1, f = w(a, "disableForReducedMotion", 布尔), u = r && !!w(a || {}, "useWorker") ? v() : null, d = l ? E : S, m = !(!t || !u) && !!t.__confetti_initialized, p = "function" == typeof matchMedia && matchMedia("(首选减少运动)").matches;函数 g(e, a, r){ for (var l, c, h, f, u, m = w(e, "粒子计数", x), p = w(e, "角度", Number), g = w(e, "扩散", Number), b = w(e, "起始速度", Number), v = w(e, "衰减", Number), y = w(e, "重力", 数字), C = w(e, "漂移", 数字), I = w(e, "颜色", T), E = w(e, "刻度", 数字), S = w(e, "形状"), k = w(e, "标量"), O = !!w(e, "平面"), F = 函数(t){ var e = w(t, "原点", 对象); 返回 ex = w(e, "x", 数字), ey = w(e, "y", 数字), e} (e), A = m, N = [], z = t.width * Fx, D = t.height * Fy; A--;) N.push((l = { x: z, y: D, 角度: p, 传播: g, 起始速度: b, 颜色: I[A % I.长度], 形状: S[(f = 0, u = S.length, Math.floor(Math.random() * (uf)) + f)], 刻度: E, 衰减: v, 重力: y, 漂移: C, 标量: k, 平面: O }, c = void 0, h = void 0, c = l.angle * (Math.PI / 180), h = l.spread * (Math.PI / 180), { x: lx, y: ly, 摆动: 10 * Math.random(), 摆动速度: Math.min(.11, .1 * Math.random() + .05), 速度: .5 * l.startVelocity + Math.random() * l.startVelocity, angle2D: -c + (.5 * h - Math.random() * h), 倾斜角度: (.5 * Math.random() + .25) * Math.PI, 颜色: l.color, shape: l.shape, tick: 0, totalTicks: l.ticks, decay: l.decay, drift: l.drift, random: Math.random() + 2, tiltSin: 0, tiltCos: 0, wobbleX: 0, wobbleY: 0, 重力: 3 * l.gravity, ovalScalar: .6, 标量: l.scalar, flat: l.flat })); 返回i ? i.addFettis(N) : (i = 函数(t, e, a, r, i){ var l, c, h = e.slice(), f = t.getContext("2d"), u = s((函数(e){ 函数s() { l = c = null, f.clearRect(0, 0, r.width, r.height), i(), e() }l=M.frame((function e() { !n || r.width === o.width && r.height === o.height || (r.width = t.width = o.width, r.height = t.height = o.height), r.width || r.高度 || (a(t), r.width = t.width, r.height = t.height), f.clearRect(0, 0, r.width, r.height), (h = h.filter((function (t) { return P(f, t) }))).length ? l = M.frame(e) : s() })), c=s })); return { addFettis: function (t) { return h = h.concat(t), u }, canvas: t, promise: u, reset: function () { l && M.cancel(l), c && c() } } } (t, N, d, a, r), i.promise) }函数 b(a){ var n = f || w(a, "disableForReducedMotion", Boolean), o = w(a, "zIndex", Number); if (n && p) return s((function (t) { t() })); l && i ? t = i.canvas : l && !t && (t = function (t) { var e = document.createElement("canvas"); return e.style.position = "固定", e.style.top = "0px", e.style.left = "0px", e.style.pointerEvents = "无", e.style.zIndex = t, e }(o), document.body.appendChild(t)), c && !m && d(t); var r = { width: t.width, height: t.height }; function b() { if (u) { var e = { getBoundingClientRect: function () { if (!l)返回 t.getBoundingClientRect() } }; return d(e), void u.postMessage({ resize: { width: e.width, height: e.height } }) } r.width = r.height = null } function M() { i = null, c && (h = !1, e.removeEventListener("resize", b)), l && t && (document.body.removeChild(t), t = null, m = !1) } 返回u && !m && u。 init(t), m = !0, u && (t.__confetti_initialized = !0), c && !h && (h = !0, e.addEventListener("调整大小", b, !1)), u ? u.fire(a, r, M) : g(a, r, M) } 返回b.reset = function () { u && u.reset(), i && i.reset() }, b }函数O(){ 返回b || (b = k(null, { useWorker: !0, resize: !0 })), b } a.exports = function () { return O().apply(this, arguments) }, a.exports.reset = function () { O().reset() }, a.exports.create = k, a.exports.shapeFromPath = function (t) { if (!i) 抛出新错误(“此浏览器不支持路径五彩纸屑”); var e, a; "string" == typeof t ? e = t : (e = t.path, a = t.matrix); var n = new Path2D(e), o = document.createElement("canvas ").getContext("2d"); if (!a) { for (var r, l, s = 1e3, c = s, h = s, f = 0, u = 0, d = 0; d < s; d += 2)for (var m = 0; m < s; m += 2)o.isPointInPath(n, d, m, "非零") && (c = Math.min(c, d), h = Math.min(h, m), f = Math.max(f, d), u = Math.max(u, m)); r = fc, l = uh; var p = Math.min(10 / r, 10 / l); a = [p, 0, 0, p, -Math.round(r / 2 + c) * p, -Math.round(l / 2 + h) * p] } return { 类型：" path", path: e, matrix: a } }, a.exports.shapeFromText = function (t) { var e, a = 1, n = "#000000", o = '"Twemoji Mozilla", "Apple Color Emoji ", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji", "EmojiOne Color", "Android Emoji", "system emoji", sans-serif'; "string" == typeof t ? e = t : (e = t.text, a = "标量"在 t ? t.scalar : a, o = "fontFamily"在 t ? t.fontFamily : o, n = "颜色"在 t ? t.color : n ); var r = 10 * a, i = r + "px " + o, l = new OffscreenCanvas(r, r), s = l.getContext("2d"); s.font = i; var c = s.measureText(e), h = Math.floor(c.width), f = Math.floor(c.fontBoundingBoxAscent + c.fontBoundingBoxDescent); (s = (l = new OffscreenCanvas(h, f)).getContext("2d ")).font = i, s.fillStyle = n, s.fillText(e, 0, r); var u = 1 / a; return { type: "位图", 位图: l.transferToImageBitmap(), 矩阵: [u, 0, 0, u, -h * u / 2, -f * u / 2] } }}(function () { return void 0 !== t ? t : "未定义" != typeof self ? self : this || {} }(), e, !1), t.confetti = e.exports}(窗口, {}); Reset()}, a.exports.create = k, a.exports.shapeFromPath = function (t) { if (!i) 抛出新错误(“此浏览器不支持路径五彩纸屑”); var e, a; "string" == typeof t ? e = t : (e = t.path, a = t.matrix); var n = new Path2D(e), o = document.createElement("canvas").getContext("2d "); if (!a) { for (var r, l, s = 1e3, c = s, h = s, f = 0, u = 0, d = 0; d < s; d += 2)for (var m = 0; m < s; m += 2)o.isPointInPath(n, d, m, "非零") && (c = Math.min(c, d), h = Math.min(h, m), f = Math.max(f, d), u = Math.max(u, m)); r = fc, l = uh; var p = Math.min(10 / r, 10 / l); a = [p, 0, 0, p, -Math.round(r / 2 + c) * p, -Math.round(l / 2 + h) * p] } return { type: "path", path: e, 矩阵: a } }, a.exports.shapeFromText = function (t) { var e, a = 1, n = "#000000", o = '"Twemoji Mozilla", "Apple Color Emoji", "Segoe UI Emoji" , "Segoe UI Symbol", "Noto Color Emoji", "EmojiOne Color", "Android Emoji", "system emoji", sans-serif'; "string" == typeof t ? e = t : (e = t.文本，a =“标量”在t？t.scalar：a，o =“fontFamily”在t？t.fontFamily：o，n =“颜色”在t？t.color：n）; var r = 10 * a, i = r + "px " + o, l = new OffscreenCanvas(r, r), s = l.getContext("2d"); s.font = i; var c = s.measureText(e), h = Math.floor(c.width), f = Math.floor(c.fontBoundingBoxAscent + c.fontBoundingBoxDescent); (s = (l = new OffscreenCanvas(h, f)).getContext("2d")).font = i, s.fillStyle = n, s.fillText(e, 0, r); var u = 1 / a; return { type: "位图", 位图: l.transferToImageBitmap(), 矩阵: [u, 0, 0, u, -h * u / 2, -f * u / 2] } }}(function () { return void 0 !== t ? t : "undefined" != typeof self ? self : this || {} }(), e, !1), t.confetti = e.exports}(窗口, {}); Reset()}, a.exports.create = k, a.exports.shapeFromPath = function (t) { if (!i) 抛出新错误(“此浏览器不支持路径五彩纸屑”); var e, a; "string" == typeof t ? e = t : (e = t.path, a = t.matrix); var n = new Path2D(e), o = document.createElement("canvas").getContext("2d "); if (!a) { for (var r, l, s = 1e3, c = s, h = s, f = 0, u = 0, d = 0; d < s; d += 2)for (var m = 0; m < s; m += 2)o.isPointInPath(n, d, m, "非零") && (c = Math.min(c, d), h = Math.min(h, m), f = Math.max(f, d), u = Math.max(u, m)); r = fc, l = uh; var p = Math.min(10 / r, 10 / l); a = [p, 0, 0, p, -Math.round(r / 2 + c) * p, -Math.round(l / 2 + h) * p] } return { type: "path", path: e, 矩阵: a } }, a.exports.shapeFromText = function (t) { var e, a = 1, n = "#000000", o = '"Twemoji Mozilla", "Apple Color Emoji", "Segoe UI Emoji" , "Segoe UI Symbol", "Noto Color Emoji", "EmojiOne Color", "Android Emoji", "system emoji", sans-serif'; "string" == typeof t ? e = t : (e = t.文本，a =“标量”在t？t.scalar：a，o =“fontFamily”在t？t.fontFamily：o，n =“颜色”在t？t.color：n）; var r = 10 * a, i = r + "px " + o, l = new OffscreenCanvas(r, r), s = l.getContext("2d"); s.font = i; var c = s.measureText(e), h = Math.floor(c.width), f = Math.floor(c.fontBoundingBoxAscent + c.fontBoundingBoxDescent); (s = (l = new OffscreenCanvas(h, f)).getContext("2d")).font = i, s.fillStyle = n, s.fillText(e, 0, r); var u = 1 / a; return { type: "位图", 位图: l.transferToImageBitmap(), 矩阵: [u, 0, 0, u, -h * u / 2, -f * u / 2] } }}(function () { return void 0 !== t ? t : "undefined" != typeof self ? self : this || {} }(), e, !1), t.confetti = e.exports}(窗口, {});f)).getContext("2d")).font = i, s.fillStyle = n, s.fillText(e, 0, r); var u = 1 / a; return { type: "位图", 位图: l.transferToImageBitmap(), 矩阵: [u, 0, 0, u, -h * u / 2, -f * u / 2] }}}(function () { return void 0 !== t ? t : " undefined" != typeof self ? self : this || {} }(), e, !1), t.confetti = e.exports}(window, {});f)).getContext("2d")).font = i, s.fillStyle = n, s.fillText(e, 0, r); var u = 1 / a; return { type: "位图", 位图: l.transferToImageBitmap(), 矩阵: [u, 0, 0, u, -h * u / 2, -f * u / 2] }}}(function () { return void 0 !== t ? t : " undefined" != typeof self ? self : this || {} }(), e, !1), t.confetti = e.exports}(window, {});
//# sourceMappingURL=/sm/3a50e5f9670f125a57b8206e6e80284535196995f323b85a4281a5cf4a027e57.map